; Constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
life = 1150		;Amount of life to start with
power = 6000		;Amount of maximum power
attack = 100		;attack power (more is stronger)
defence = 100		;defensive power (more is stronger)
fall.defence_up = 50	;Percentage to increase defense everytime player is knocked down
liedown.time = 45		;Time which player lies down for, before getting up
airjuggle = 15		;Number of points for juggling
sparkno = 2			;Default hit spark number for HitDefs
guard.sparkno = 40	;Default guard spark number
KO.echo = 0			;1 to enable echo on KO
volumescale = 100			;Volume offset (negative for softer)
IntPersistIndex = 60	;Variables with this index and above will not have their values
FloatPersistIndex = 40  ;reset to 0 between rounds or matches. There are 60 int variables,
  				;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variables repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variables to persist between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 1			;Horizontal scaling factor.
yscale = 1			;Vertical scaling factor.
ground.back = 16		;Player width (back, ground)
ground.front = 15		;Player width (front, ground)
air.back = 12		;Player width (back, air)
air.front = 12		;Player width (front, air)
height = 60			;Height of player (for opponent to jump over)
attack.dist = 135		;Default attack distance
proj.attack.dist = 105	;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too   
head.pos = -5, -90	;Approximate position of head
mid.pos = -5, -60		;Approximate position of midsection
shadowoffset = 0		;Number of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2.2		;Walk forward
walk.back = -2		;Walk backward
run.fwd  = 4, 0		;Run forward (x, y)
run.back = -4,-3.8	;Hop backward (x, y)
jump.neu = 0,-6.25		;Neutral jumping velocity (x, y)
jump.back = -2.25		;Jump back Speed (x, y)
jump.fwd = 2.25		;Jump forward Speed (x, y)
runjump.back = -5,-5;Running jump speeds (opt)
runjump.fwd = 5,-5	;.
airjump.neu = 0,-5.75	;.
airjump.back = -2	;Air jump speeds (opt)
airjump.fwd = 2		;.

[Movement]
airjump.num = 1		;Number of air jumps allowed (opt)
airjump.height = 25	;Minimum distance from ground before you can air jump (opt)
yaccel = .44		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .75	;Friction coefficient when crouching

[Quotes]
victory1 = "Looks like your antivirus wasn't enough..."
victory2 = "Your antivirus is not enough, you need Protegent Anti-Joel!!"
victory3 = "Now I can watch my anime in peace..."
victory4 = "Haha, looks like you don't have data recovery!"
victory5 = "Looks like COVID-19 isn't the only dangerous virus around!"
victory6 = "Your search history is all mine..."
victory7 = "I'm far more powerful than any antivirus! Not even Malwarebytes can stop me!"
victory8 = "You should've used incognito mode..."
victory9 = "Yeet lmao."
victory10 = "01011001 01101111 01110101 00100000 01101000 01100001 01110110 01100101 00100000 01100010 01100101 01100101 01101110 00100000 01001010 01001111 01000101 01001100 01000101 01000100 00100001"

;---------------------------------------------------------------------------
; Format:
; [Statedef STATENO]
; type = ?      S/C/A/L  stand/crouch/air/liedown
; movetype = ?  I/A/H    idle/attack/gethit
; physics = ?   S/C/A/N  stand/crouch/air/none
; juggle = ?             air juggle points move requires
;
; [State STATENO, ?]     ? - any number you choose
; type = ?
; ...

;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 180
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 190]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 190, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 190, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 190, 4] ;Change to stand state
type = ChangeState
trigger1 = AnimTime = 0
value = 0

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, PowerAdd]
type = PowerAdd
trigger1 = animelem = 15
value = 1000

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = S				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 200				;Change animation (Def: no change)
poweradd = 25			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 5, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 7			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -1		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 200, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "x" && movehit
value = 215
ctrl = 0

;---------------------------------------------------------------------------
; Standing Medium Punch
; CNS difficulty: easy
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 50
ctrl = 0
velset = 3,0
anim = 210

[State 210, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 35, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 2			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 24		;Time that the opponent slides back
ground.hittime  = 20		;Time opponent is in hit state
ground.velocity = -7.5		;Velocity at which opponent is pushed
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;----------------------------------------------------------------------------
; Standing Light Punch Followup
; CNS difficulty: easy
[Statedef 215]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 20
ctrl = 0
velset = 0,0
anim = 215
hitcountpersist = 1

[State 215, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 5, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 7			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -1		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 215, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "x" && movehit
value = 216
ctrl = 0

;---------------------------------------------------------------------------
; Super Joel Rush1
; CNS difficulty: easy
[Statedef 216]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = S				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 216				;Change animation (Def: no change)
poweradd = 20			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)
hitcountpersist = 1

[State 216, 1]
type = HitDef
trigger1 = animelem = 1
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 7, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, ifelse(hitcount > 24, 3 + ceil(6 - hitcount*0.25), 3)			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-1.5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
x = 2
y = 0
;ignorehitpause =
;persistent =

[State 216, AfterImage]
type = AfterImage
trigger1 = AnimElem = 1
time = 20

[State 216, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "x" && movehit
value = 217
ctrl = 0

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "y" && movehit
value = 218
ctrl = 0

;---------------------------------------------------------------------------
; Super Joel Rush2
; CNS difficulty: easy
[Statedef 217]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = S				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 217				;Change animation (Def: no change)
poweradd = 20			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)
hitcountpersist = 1

[State 217, 1]
type = HitDef
trigger1 = animelem = 1
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 8, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, ifelse(hitcount > 24, 2 + ceil(6 - hitcount*0.25), 2)			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-1.5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
x = 3
y = 0
;ignorehitpause =
;persistent =

[State 217, AfterImage]
type = AfterImage
trigger1 = AnimElem = 1
time = 20

[State 217, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "x" && movehit
value = 216
ctrl = 0

[State 0, ChangeState]
type = ChangeState
trigger1 = command = "y" && movehit
value = 218
ctrl = 0

;---------------------------------------------------------------------------
; Super Joel Rush Finisher
; CNS difficulty: easy
[Statedef 218]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = A				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 218				;Change animation (Def: no change)
poweradd = 50			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)
hitcountpersist = 1

[State 218, 1]
type = HitDef
trigger1 = animelem = 1
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 0			;Damage that move inflicts, guard damage
animtype = Hard			;Animation type: Light, Medium, Hard, Back (def: Light)
guardflag = HA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 2			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 6		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -0.2,-9.8		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-3	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-9.8		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 0, VelAdd]
type = VelAdd
trigger1 = animelem = 1
x = 1.25
y = 0

[State 0, VelAdd]
type = VelAdd
trigger1 = 1
y = -0.6 - time/60

[State 218, AfterImage]
type = AfterImage
trigger1 = AnimElem = 1
time = 20

[State 218, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Punch
; CNS difficulty: easy
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65
ctrl = 0
velset = 0,0
anim = 220

[State 220, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 0			;Damage that move inflicts, guard damage
animtype = Hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = M			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 5			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 2			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 20		;Time opponent is in hit state
ground.velocity = -5,-2	;Velocity at which opponent is pushed
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
					;Y-velocity at which opponent is pushed
air.hittime = 16			;Time before opponent regains control in air

[State 220, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 22
ctrl = 0
velset = 0,0
anim = 230

[State 230, 1]
type = HitDef
trigger1 = animelem = 2
trigger2 = animelem = 4
trigger2 = hitcount = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 12, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 3			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 10		;Time opponent is in hit state
ground.velocity = -0.1,-7		;Velocity at which opponent is pushed
airguard.velocity = 0,-5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -0.1,-7		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 10			;Time before opponent regains control in air

[State 230, 1]
type = HitDef
trigger1 = animelem = 3
trigger1 = MoveContact = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 75, 25			;Damage that move inflicts, guard damage
animtype = Hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = AF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10,	35		;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 3			;Sound to play on hit
guardsound = 5, 2			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 44		;Time opponent is in hit state
ground.velocity = -2,-11		;Velocity at which opponent is pushed
airguard.velocity = -1,-9	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -2,-11		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
ground.cornerpush.veloff = -7.5
air.cornerpush.veloff = -7.5
air.hittime = 44			;Time before opponent regains control in air
palfx.mul = 160,200,280
palfx.add = 20,40,100
palfx.time = 44
envshake.time = 16
envshake.freq = 10

[State 230, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 20
ctrl = 0
velset = 0,0
anim = 240

[State 240, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 25, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 3			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.velocity = -0.5,-4.5		;Velocity at which opponent is pushed
air.type = High			;Type: High, Low, Trip (def: same as ground.type)

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Kick
; CNS difficulty: easy
[Statedef 250]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= -1000
ctrl = 0
velset = 0,0
anim = 250

[State 230, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 105, 0			;Damage that move inflicts, guard damage
animtype = Hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = H			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 3			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 40		;Time opponent is in hit state
ground.velocity = -1,-15		;Velocity at which opponent is pushed
air.velocity = -1,-15		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
					;Y-velocity at which opponent is pushed
air.hittime = 56			;Time before opponent regains control in air

[State 230, AfterImage]
type = AfterImage
trigger1 = AnimElem = 1
time = 20

[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Projectile Shoot One
[StateDef 300]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 300
poweradd = 50

[State 300, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 302
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100
projshadow = -1
offset = 26,-16
velocity = 3
attr = S, NP
damage   = 13
animtype = Light
guardflag = MA
hitflag = MAF
pausetime = 10,10
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 2
ground.hittime  = 5
ground.velocity = -2
air.velocity = -2,-.6
air.juggle = 3
air.fall = 0
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 300, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
[StateDef 302]
type = A
movetype= A
physics = A
juggle  = 1
velset = 0,0
ctrl = 0
anim = 301
poweradd = 60

[State 302, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 302
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 26,-16
velocity = 3
attr = S, NP
damage   = 12
animtype = light
guardflag = MA
hitflag = MAF
pausetime = 10,10
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 2
ground.hittime  = 5
ground.velocity = -2
air.velocity = -2,-.6
air.juggle = 3
air.fall = 0
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 300, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
[StateDef 303]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 303
poweradd = 40

[State 303, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 304
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 26,-16
velocity = 1
attr = S, NP
damage   = 30
animtype = medium
guardflag = MA
hitflag = MAF
pausetime = 15,20
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 2
ground.hittime  = 5
ground.velocity = -2
air.velocity = -2,-.6
air.juggle = 3
air.fall = 0
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 303, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
[StateDef 305]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 305
poweradd = 20

[State 305, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2.25
attr = S, NP
damage   = 10
animtype = light
guardflag = MA
hitflag = MAF
pausetime = 50,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 305, 2]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2,1
attr = S, NP
damage   = 10
animtype = light
guardflag = MA
hitflag = MAF
pausetime = 20,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 305, 3]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2,-1
attr = S, NP
damage   = 10
animtype = light
guardflag = MA
hitflag = MAF
pausetime = 20,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 305, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
[StateDef 309]
type = A
movetype= A
physics = A
juggle  = 1
velset = 0,0
ctrl = 0
anim = 309
poweradd = 30

[State 309, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2.25
attr = S, NP
damage   = 7
animtype = light
guardflag = MA
hitflag = MAF
pausetime = 50,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 309, 2]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2,1
attr = S, NP
damage   = 7
animtype = hard
guardflag = MA
hitflag = MAF
pausetime = 20,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 309, 3]
type = Projectile
trigger1 = AnimElem = 2
projanim = 306
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 22,-8
velocity = 2,-1
attr = S, NP
damage   = 7
animtype = hard
guardflag = MA
pausetime = 20,10
hitsound   = 5,2
sparkxy = 500,500
guardsound = 6,0
ground.type = Low
ground.slidetime = 25
ground.hittime  = 25
ground.velocity = -6
air.velocity = -4,-6
air.juggle = 3
air.fall = 1
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 309, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
[StateDef 307]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 303
poweradd = 30

[State 307, 1]
type = Projectile
trigger1 = AnimElem = 2
projanim = 308
projhitanim = 10001
projpriority = 1
projheightbound = -240, 100
projedgebound = 100

projshadow = -1
offset = 26,-16
velocity = 0.5
attr = S, NP
damage   = 40
animtype = hard
guardflag = MA
pausetime = 15,3
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 10
ground.hittime  = 5
ground.velocity = -2
air.velocity = -2,-.6
air.juggle = 3
air.fall = 0
down.velocity = -4,-6
down.hittime = 30
down.bounce = 0

[State 307, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning the
;     player will get hit instead of trading hits with the opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 25
ctrl = 0
velset = 0,0
anim = 400

[State 400, 1]
type = HitDef
trigger1 = animelem = 2
attr = C, NA			;Attribute: Standing, Normal Attack
damage = 9, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 3			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -0.8,0		;Velocity at which opponent is pushed
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 400, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; beamshoot
[Statedef 310]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -3000
ctrl = 0
anim = 30

[State 310, AttackDist]
type = AttackDist
trigger1 = AnimElemNo(0) <= 3
value = 300


[State 310, SuperPause]
type = SuperPause
trigger1 = time = 0
time = 20
sound = 20,0
darken = 1

[State 310, ChangeAnim]
type = ChangeAnim
trigger1 = time = 1
value = 310
elem = 1

[State 310, Helper]
type = Helper
trigger1 = anim = 310
trigger1 = AnimElem = 3
helpertype = normal ;player
name = "beam"
ID = 311
stateno = 311
pos = 125,-4
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0

[State 0, BGPalFX]
type = BGPalFX
trigger1 = 1
time = 1
add = 60,60,0
mul = 240,240,120

[State 310, 5]
type = ChangeState
trigger1 = anim = 310
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;beam
[statedef 311]
type =  S
Movetype = A
Physics = N
Ctrl = 0
anim= 311
Sprpriority = 3

[State 311, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, SA			;Attribute: Standing, Normal Attack
damage = 350, 100			;Damage that move inflicts, guard damage
animtype = Hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = A			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 2, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 35			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 4			;Sound to play on hit
guardsound = 5, 1			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 30		;Time that the opponent slides back
ground.hittime  = 10		;Time opponent is in hit state
ground.velocity = -12,-8		;Velocity at which opponent is pushed
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -10,-6		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air
envshake.time = 45
envshake.freq = 45
palfx.mul = 300,300,150
palfx.add = 100,100,50

[State 311, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0
;---------------------------------------------------------------------------
; Crouching Medium Punch
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 410

[State 410, 1]
type = HitDef
trigger1 = animelem = 2
attr = C, NA			;Attribute: Standing, Normal Attack
damage = 5, 0			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 55			;Time attacker pauses, time opponent shakes
guard.pausetime = 1,5
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -2,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 410, 5]
type = ChangeState
trigger1 = animelem = 4
trigger1 = HitCount > 0
value = 11
ctrl = 1

[State 410, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Strong Punch
[Statedef 420]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 420

[State 420, 1]
type = HitDef
trigger1 = animelem = 2
attr = C, NA			;Attribute: Standing, Normal Attack
damage = 10, 0			;Damage that move inflicts, guard damage
animtype = light			;Animation type: Light, Medium, Heavy, Back (def: Light)
hitflag = MAF			;Flags of conditions that move can hit
guardflag = MA
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 4			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 20		;Time that the opponent slides back
ground.hittime  = 16		;Time opponent is in hit state
air.hittime = 16			;Time before opponent regains control in air
ground.velocity = -6,-2.5		;Velocity at which opponent is pushed
air.velocity = -6,-2.5	;X-velocity at which opponent is pushed,
getpower = 10
kill = 0

[State 420, ChangeAnim]
type = ChangeAnim
trigger1 = animelem = 4
trigger1 = HitCount < 1 || frontEdgeBodyDist < 70
trigger2 = animelem = 9
trigger2 = HitCount < 2
value = 420
elem = 14

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 5
x = 120

[State 420, 1]
type = HitDef
trigger1 = animelem = 7
attr = C, NA			;Attribute: Standing, Normal Attack
damage = 15, 10			;Damage that move inflicts, guard damage
animtype = medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
hitflag = MAF			;Flags of conditions that move can hit
guardflag = MA
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 4			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 20		;Time that the opponent slides back
ground.hittime  = 16		;Time opponent is in hit state
air.hittime = 16			;Time before opponent regains control in air
ground.velocity = -8,-3.5		;Velocity at which opponent is pushed
air.velocity = -7,-3.5		;X-velocity at which opponent is pushed,
getpower = 15
kill = 0

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = 135

[State 420, 1]
type = HitDef
trigger1 = animelem = 12
attr = C, NA			;Attribute: Standing, Normal Attack
damage = 20, 15			;Damage that move inflicts, guard damage
animtype = hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
hitflag = MAF			;Flags of conditions that move can hit
guardflag = MA
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 14			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 20		;Time that the opponent slides back
ground.hittime  = 35		;Time opponent is in hit state
air.hittime = 35			;Time before opponent regains control in air
ground.velocity = -1,-8		;Velocity at which opponent is pushed
air.velocity = -1,-8	;X-velocity at which opponent is pushed,
getpower = 20

[State 0, Turn]
type = Turn
trigger1 = animelem = 5
trigger2 = animelem = 10

[State 420, AfterImage]
type = AfterImage
trigger1 = AnimElem = 1
time = 30

[State 420, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 430

[State 430, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = HA			;Flags on how move is to be guarded against
hitflag = HAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 8			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 6		;Time that the opponent slides back
ground.hittime  = 24		;Time opponent is in hit state
ground.velocity = -0.2,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 24			;Time before opponent regains control in air

[State 430, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Kick
; CNS difficulty: easy
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 440

[State 440, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 24, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 6		;Time that the opponent slides back
ground.hittime  = 4		;Time opponent is in hit state
ground.velocity = -0.2,-4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 440, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 450]
type    = A				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= I				;Move-type: A-attack, I-idle, H-gethit
physics = N				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 450				;Change animation (Def: no change)
poweradd = 5			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)

[State 450, 5]
type = CtrlSet
trigger1 = animelem = 2
value = 1

[State 450, VelSet]
type = VelSet
trigger1 = AnimElem = 1
x = 2
y = -3.5

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = animelem = 3
statetype = A       ;S,A,C,L
movetype = I        ;I,A,H
physics = A         ;A,C,S,N

[State 450, VelSet]
type = VelSet
trigger1 = AnimElem = 3
x = -2
y = 7.5

;---------------------------------------------------------------------------
; Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 25
ctrl = 0
anim = 600

[State 600, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 11, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 2			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 1		;Time that the opponent slides back
ground.hittime  = 3		;Time opponent is in hit state
ground.velocity = -2,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 600, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Jump Medium Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 45
ctrl = 0
anim = 610

[State 610, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 20, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 5			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 1		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -2,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 16			;Time before opponent regains control in air

[State 610, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Jump Strong Punch
; CNS difficulty: easy
[Statedef 620]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 60
ctrl = 0
anim = 620

[State 620, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 29, 0			;Damage that move inflicts, guard damage
animtype = hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 6			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 2			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -2,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 82			;Time before opponent regains control in air

[State 620, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630

[State 630, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 12, 0			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 4			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 3		;Time opponent is in hit state
ground.velocity = -2,-6		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-5.6		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 630, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Jump Medium Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 640

[State 640, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 15, 0			;Damage that move inflicts, guard damage
animtype = medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 11, 12			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 6		;Time opponent is in hit state
ground.velocity = 0,0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air
kill = 0

[State 640, ChangeState]
type = ChangeState
trigger1 = HitCount > 0
value = 645
ctrl = 0

[State 640, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 44
ctrl = 1

;---------------------------------------------------------------------------
;JMP Grapple
[Statedef 645]
type = A
movetype = A
physics = A
anim = 645

[State 645, VelSet]
type = VelSet
trigger1 = time = 0
x = enemynear,Vel X + 2
y = enemynear,Vel Y

[State 640, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 40, 0			;Damage that move inflicts, guard damage
animtype = medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 4			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -8,-3		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -8,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 15			;Time before opponent regains control in air

;---------------------------------------------------------------------------
; Jump Strong Kick
; CNS difficulty: easy
[Statedef 650]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 650

[State 650, 1]
type = HitDef
trigger1 = animelem = 2
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 30, 0			;Damage that move inflicts, guard damage
animtype = hard			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 0			;Time attacker pauses, time opponent shakes
sparkno = 4				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 2		;Time that the opponent slides back
ground.hittime  = 9		;Time opponent is in hit state
ground.velocity = 0,-5.5		;Velocity at which opponent is pushed
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,-5.5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 15			;Time before opponent regains control in air

[State 650, VelAdd]
type = VelAdd
trigger1 = AnimElem = 2
x = 0
y = -5.5

[State 650, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 44
ctrl = 1

;-----------------------------------------------------------------------
;DDoS (stand)
[Statedef 900]
type = S
movetype = A
physics = S
anim = 900
poweradd = -500
ctrl = 0
[State 900, Helper]
type = Helper
trigger1 = animelem = 2
name = "DDoS"
ID = 905
stateno = 905
pos = 0,-45
[State 900, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-----------------------------------------------------------------------
;DDoS (crouch)
[Statedef 901]
type = C
movetype = A
physics = C
anim = 900
poweradd = -500
ctrl = 0
[State 901, Helper]
type = Helper
trigger1 = animelem = 2
name = "DDoS"
ID = 906
stateno = 906
pos = 0,-15
[State 901, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;-----------------------------------------------------------------------
;DDoS (air)
[Statedef 902]
type = A
movetype = A
physics = A
anim = 900
poweradd = -500
ctrl = 0
[State 902, Helper]
type = Helper
trigger1 = animelem = 2
name = "DDoS"
ID = 907
stateno = 907
pos = 0,-40
[State 902, StateTypeSet]
type = StateTypeSet
trigger1 = Pos Y + Vel Y >= 0
statetype = A       ;S,A,C,L
movetype = A        ;I,A,H
physics = S         ;A,C,S,N
[State 902, PosSet]
type = PosSet
trigger1 = Pos Y + Vel Y >= 0
y = 0
[State 902, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1


;-----------------------------------------------------------------------
;DDoS Helper (stand)
[Statedef 905]
movetype = A
anim = 905
[State 905, VelSet]
type = VelSet
trigger1 = time = 0
x = 8
[State 905, VelSet]
type = VelSet
trigger1 = time > 0
x = Vel X * 0.75
[State 905, HitDef]
type = HitDef
trigger1 = time < 10
trigger1 = enemynear,stateno = [120,159]

attr = S,NA        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = H
animtype = Hard          ;Light, Medium, Hard, Back, Up, DiagUp
ground.type = High      ;Low, Trip, None
damage = 225,0
pausetime = 40,40
hitsound = 5,3
ground.slidetime = 20
ground.hittime = 80
air.hittime = 20
ground.velocity = -5,0
envshake.time = 40
envshake.freq = 60
palfx.time = 40
palfx.add = 200,100,0
palfx.mul = 200,100,0
numhits = 1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = time = 40

;-----------------------------------------------------------------------
;DDoS Helper (crouch)
[Statedef 906]
movetype = A
anim = 905
[State 905, VelSet]
type = VelSet
trigger1 = time = 0
x = 8
[State 905, VelSet]
type = VelSet
trigger1 = time > 0
x = Vel X * 0.75
[State 905, HitDef]
type = HitDef
trigger1 = time < 10
trigger1 = enemynear,stateno = [120,159]
attr = C,NA        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = L
animtype = Hard          ;Light, Medium, Hard, Back, Up, DiagUp
ground.type = High      ;Low, Trip, None
damage = 225,0
pausetime = 40,40
hitsound = 5,3
ground.slidetime = 20
ground.hittime = 80
air.hittime = 20
ground.velocity = -5,0
envshake.time = 40
envshake.freq = 60
palfx.time = 40
palfx.add = 200,100,0
palfx.mul = 200,100,0
numhits = 1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = time = 40

;-----------------------------------------------------------------------
;DDoS Helper (stand)
[Statedef 907]
movetype = A
anim = 905
[State 905, VelSet]
type = VelSet
trigger1 = time = 0
x = 8
[State 905, VelSet]
type = VelSet
trigger1 = time > 0
x = Vel X * 0.75
[State 905, HitDef]
type = HitDef
trigger1 = time < 10
trigger1 = enemynear,stateno = [120,159]
attr = A,NA  ;anna OwO
hitflag = A
animtype = Hard          ;Light, Medium, Hard, Back, Up, DiagUp
ground.type = High      ;Low, Trip, None
damage = 225,0
pausetime = 40,40
hitsound = 5,3
ground.slidetime = 20
ground.hittime = 80
air.hittime = 20
ground.velocity = -5,0
envshake.time = 40
envshake.freq = 60
palfx.time = 40
palfx.add = 200,100,0
palfx.mul = 200,100,0
numhits = 1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = time = 40

;-----------------------------------------------------------------------
;Xuir.EXE
[Statedef 1000]
type = S
movetype = A
physics = S
anim = 1000
poweradd = -4000
ctrl = 0

[State 1000, SuperPause]
type = SuperPause
trigger1 = animelem = 1
time = 15
darken = 1
unhittable = 1

[State 1000, Helper]
type = Helper
trigger1 = animelem = 4
helpertype = Normal
name = "XuirEXEProjectile"
ID = 1001
stateno = 1001
pos = 15,-25
postype = P1    ;P2, Front, Back, Left, Right
facing = 1
keyctrl = 0
ownpal = 0

[State 1000, ChangeState]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-------------
;Xuir.EXE Projectile (Helper)
[Statedef 1001]
type = S
movetype = A
anim = 1001

[State 1001, VelSet]
type = VelSet
trigger1 = time = 0
x = 2.5
y = 0

[State 0, VelSet]
type = VelSet
trigger1 = MoveHit
x = 0.5
y = 0 


[State 1001, HitDef]
type = HitDef
trigger1 = HitCount = 0
attr = S,NA        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = A         ;can only be air guarded
animtype = Medium          ;Light, Medium, Hard, Back, Up, DiagUp
air.animtype = Medium
damage = 75,15
pausetime = 0,300
guard.pausetime = 0,15
sparkno = S3000
guard.sparkno = S3100
sparkxy = 0,0
hitsound = 5,0
guardsound = 6,0
ground.type = High      ;Low, Trip, None
;air.type = High
ground.slidetime = 0
;guard.slidetime = 
ground.hittime = 0
;guard.hittime = 
air.hittime = 20
ground.velocity = 0,0
;guard.velocity = 0
air.velocity = 0,0
numhits = 1
kill = 0
;getpower = 0,0
;givepower = 0,0

[State 1001, Helper]
type = Helper
trigger1 = MoveHit
trigger2 = MoveContact = 1
name = "Xuir.exeAttackHandler"
ID = 1002
stateno = 1002
persistent = 0

[State 1001, DestroySelf]
type = DestroySelf
trigger1 = MoveContact > 15
trigger2 = time > 1000


;-----------------------------
;Xuir.exe Attack Handler
[Statedef 1002]

[State 1002, Trans]
type = Trans
trigger1 = 1
trans = Add
alpha = 0, 256

[State 1002, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

[State 1002, Turn] ;so that words are readable
type = Turn
trigger1 = facing = -1
trigger1 = time = 0

[State 1002, Helper]
type = Helper
trigger1 = Time%6 = 0
trigger1 = time > 20
name = "Xuir.EXE Small Projectile"
ID = 1003
stateno = 1003
pos = random/4 - 125, random/4 - 125 ;a 250x250 square around the player
postype = P1    ;P2, Front, Back, Left, Right
facing = 1
keyctrl = 0
ownpal = 0
size.shadowoffset = 0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = time = 250

;------------------------------------
;Xuir.exe Small Projectile

[Statedef 1003]
type = A
anim = 302 + 2*floor(random/250)
movetype = A

[State 0, VarSet] ;Fade-in ticks
type = VarSet
trigger1 = time = 0
v = 52    ;fv = 10
value = 12

[State 1003, Trans]
type = Null ;<-Use this to quickly disable a sctrl without errors
trigger1 = time < var(52)
trans = Add     ;None, Add, AddAlpha, Add1, Sub
alpha = 0 + time*(256/var(52)), 256 - time*(256/var(52))

[State 882, AngleDraw]
type = AngleDraw
trigger1 = time <= var(52)
value = 270 - atan((-1*facing*(Pos X - enemy,Pos X))/(Pos Y - enemy,Pos Y))*(180.0/Pi) ;+ 90-time*(90/var(52))

[State 1003, Turn]
type = Turn
trigger1 = time = 0 && (Pos X - enemy, Pos X) * facing > 0

[State 1003, VelSet]
type = VelSet
trigger1 = time = 0
x = P2Dist X / (20 + random/50) + (random/4000 - 0.125) ;will reach the player in 20-40 ticks, has slight variance
y = P2Dist Y / (20 + random/50) + (random/4000 - 0.125)

[State 1002, Helper]
type = Helper
trigger1 = enemy,life > 0 && enemy,life <= 15 && MoveHit
helpertype = Normal ;Player
name = "ErrorScreen"
ID = 1004
stateno = 1004
pos = 0,0
postype = Front    ;P2, Front, Back, Left, Right
facing = 1
ownpal = 1
persistent = 0
size.xscale = 1/CameraZoom
size.yscale = 1/CameraZoom

[State 1003, HitDef]
type = HitDef
trigger1 = HitCount = 0
trigger1 = !MoveContact
attr = S,NP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = Light          ;Light, Medium, Hard, Back, Up, DiagUp
air.animtype = Light
damage = 15,5
pausetime = 0,5
guard.pausetime = 0,5
hitsound = 5,0
guardsound = 6,0
ground.type = High      ;Low, Trip, None
air.type = Low
ground.slidetime = 0
ground.hittime = 4
guard.hittime = 6
air.hittime = 5
ground.velocity = Vel X, Vel Y
guard.velocity = Vel X * 1.25
air.velocity = Vel X, Vel Y

[State 1003, Explod]
type = Explod
trigger1 = MoveHit
trigger1 = MoveContact = 1
anim = 1005 + floor(random/250)
ID = 1005
pos = (enemynear, Pos X) + CameraPos X + (random/10 - 50), (enemynear, Pos Y) + (random/10 - 50)
facing = 1
removetime = 150

[State 1003, DestroySelf]
type = DestroySelf
trigger1 = MoveContact = 15
trigger2 = time > 600
trigger3 = Pos Y > 50


;-----------------------------------
;Xuir.EXE Error Screen (appears if opponent dies)
[Statedef 1004]
anim = 1004
sprpriority = 0

[State 1004, Null]
type = Null
trigger1 = 0

;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------


;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime the player lands from a jump, or
;from a back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
